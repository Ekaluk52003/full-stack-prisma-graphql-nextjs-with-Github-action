version: '3.8'
services:

  redis:
    image: "redis"
    command: redis-server
    ports:
      - "6378:6379"
    networks:
      - WithGithubaction

  db:
    image: "postgres"
    ports:
      - "2345:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "mydb"

    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - WithGithubaction

  server:
    build:
      target: production
      image: ekaluk52003/invoicepromptapi:pre-production
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/mydb?schema=public"
      REDIS_URL: 'redis://redis:6379'
      SESSION_SECRET: "sinnerman"
      PORT: '5000'
      ORIGIN : "https://invoice.milldev.click"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "5000:5000"
    links :
      - redis
      - db
    networks:
      - WithGithubaction

  frontend:
    image: ekaluk52003/invoicepromptfrontend:pre-production
    ports:
      - '3000:3000'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      backend_url: "https://linode.milldev.click/graphql"
    networks:
      - WithGithubaction

  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy:/data
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - WithGithubaction

  watchtower:
    image: containrrr/watchtower
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --label-enable --cleanup --interval 30

networks:
 WithGithubaction:
  driver: bridge
volumes:
  db-data:
  caddy:
  watchtower:
    driver: local